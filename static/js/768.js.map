{"version":3,"sources":["webpack://my_webpack/./src/component/some_div/search_animate_div/SearchAnimateDiv.js","webpack://my_webpack/./src/pages/new_feed/__handle_api/NewFeedHandleAPI.js","webpack://my_webpack/./src/pages/new_feed/__params/NewFeedParams.js","webpack://my_webpack/./src/pages/new_feed/_main/NewFeed.js","webpack://my_webpack/./src/pages/new_feed/search/NewFeedSearch.js"],"names":["SearchAnimateDiv","props","value","placeholder","handleChange","handleSearch","useState","is_open","setIsOpen","className","onClick","y","type","onChange","e","target","onKeyDown","keyCode","preventDefault","size_icon","propTypes","PropTypes","string","func","defaultProps","c_count","API_Post_L","params_new_feed_post_l","res","data","count","page","size","is_profile","NewFeed","post_arr","is_fetching","has_fetched","post_obj","setPostObj","pos","useRef","just_fetching","is_max","mounted","useMounted","handleScroll","WindowScrollDownBool","current","window","pageYOffset","getData_API_Post","handle_API_NewFeedPost_L","length","new_count","console","log","useEffect","addEventListener","removeEventListener","search","posts","open_fetching","NewFeedSearch","setValue","new_value"],"mappings":"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","file":"static/js/768.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconsInput from '../../../_icons_svg/Icons_input/IconsInput';\r\nimport IconsArrow from '../../../_icons_svg/icons_arrow/IconsArrow';\r\n//\r\nimport './SearchAnimateDiv.scss';\r\n\r\n//\r\nSearchAnimateDiv.propTypes = {\r\n    value: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n    handleSearch: PropTypes.func,\r\n    placeholder: PropTypes.string,\r\n};\r\nSearchAnimateDiv.defaultProps = {\r\n    value: '',\r\n    placeholder: 'Search...',\r\n}\r\n\r\n//\r\nfunction SearchAnimateDiv(props) {\r\n    const { value, placeholder, handleChange, handleSearch } = props;\r\n    //\r\n    const [is_open, setIsOpen] = useState(false);\r\n\r\n    //\r\n    function onClick() {\r\n        if (is_open) {\r\n            handleSearch();\r\n        } else {\r\n            setIsOpen(true);\r\n        }\r\n    }\r\n    //\r\n    function handleClose() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    //\r\n    function onChange(e) {\r\n        handleChange(e.target.value);\r\n    }\r\n    //\r\n    function onKeyDown(e) {\r\n        if (e.keyCode == 13) {\r\n            e.preventDefault();\r\n            handleSearch();\r\n        }\r\n    }\r\n    //\r\n    function handleClear() {\r\n        handleChange('');\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className={`SearchAnimateDiv position-rel ${is_open ? '' : 'SearchAnimateDiv_close'}`}>\r\n            <div className=\"SearchAnimateDiv_key\">\r\n                <div\r\n                    className={`SearchAnimateDiv_key-contain display-flex justify-content-center align-items-center cursor-pointer ${\r\n                        is_open ? 'nav-active' : ''\r\n                    }`}\r\n                    onClick={onClick}\r\n                >\r\n                    <IconsInput y={200} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SearchAnimateDiv_input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n\r\n                <div\r\n                    className=\"SearchAnimateDiv_input-clear\"\r\n                    onClick={handleClear}\r\n                >\r\n                    <IconsArrow y={400} size_icon=\"0.8rem\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SearchAnimateDiv_right\">\r\n                <div className=\"SearchAnimateDiv_icon-close display-flex justify-content-center align-items-center\">\r\n                    <div\r\n                        className=\"close-icon-small brs-50 cursor-pointer\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        <IconsArrow y={400} size_icon=\"1rem\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchAnimateDiv;\r\n","import { API_Post_L } from '../../../api/api_django/user/user_post/UserPost';\r\n//\r\nimport { params_new_feed_post_l } from '../__params/NewFeedParams';\r\n\r\n//\r\nexport async function handle_API_NewFeedPost_L(c_count) {\r\n    const res = await API_Post_L({\r\n        ...params_new_feed_post_l,\r\n        c_count: c_count,\r\n    });\r\n    const { data, count } = res.data;\r\n\r\n    return [data, count];\r\n}\r\n","\r\n\r\n// \r\nexport const params_new_feed_post_l = {\r\n    page: 1,\r\n    size: 6,\r\n    is_profile: 0,\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport update from 'immutability-helper';\r\n//\r\nimport { handle_API_NewFeedPost_L } from '../__handle_api/NewFeedHandleAPI';\r\nimport { WindowScrollDownBool } from '../../../_some_function/ScrollDown';\r\nimport { useMounted } from '../../../_custom_hooks/useMounted';\r\n//\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\n//\r\nimport Posts from '../../../component/posts/_posts/_main/PostsWs';\r\nimport NewFeedSearch from '../search/NewFeedSearch';\r\nimport AddNewPost from '../../../component/posts/common/add_new_post/AddNewPost';\r\n//\r\nimport './NewFeed.scss';\r\nimport './NewFeedRes.scss';\r\n\r\n//\r\nfunction NewFeed() {\r\n    // state\r\n    const [post_obj, setPostObj] = useState({\r\n        post_arr: [],\r\n        count: 0,\r\n        is_fetching: false,\r\n        has_fetched: false,\r\n    });\r\n\r\n    const { has_fetched, post_arr, is_fetching } = post_obj;\r\n\r\n    // ref\r\n    const pos = useRef(0);\r\n    const just_fetching = useRef(true);\r\n    const is_max = useRef(false);\r\n    \r\n    //\r\n    const mounted = useMounted();\r\n\r\n    //\r\n    useEffect(() => {\r\n        getData_API_Post();\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    //\r\n    function handleScroll() {\r\n        if (\r\n            WindowScrollDownBool(\r\n                pos.current,\r\n                just_fetching.current,\r\n                is_max.current,\r\n                0.7\r\n            )\r\n        ) {\r\n            just_fetching.current = true;\r\n            pos.current = window.pageYOffset;\r\n            getData_API_Post();\r\n        }\r\n    }\r\n\r\n    /*---------------------------- GET API ---------------------------------*/\r\n\r\n    // get post\r\n    function getData_API_Post() {\r\n        setPostObj(async (post_obj) => {\r\n            try {\r\n                const { has_fetched, post_arr, count } = post_obj;\r\n\r\n                setPostObj({\r\n                    ...post_obj,\r\n                    is_fetching: true,\r\n                });\r\n                //\r\n                const [data, new_count] = await handle_API_NewFeedPost_L(\r\n                    post_arr.length\r\n                );\r\n\r\n                if (mounted) {\r\n                    setPostObj({\r\n                        ...post_obj,\r\n                        post_arr: [...post_arr, ...data],\r\n                        is_fetching: false,\r\n                        has_fetched: true,\r\n                        count: has_fetched ? count : new_count,\r\n                    });\r\n                    has_fetched && (is_max.current = post_arr.length >= count);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                just_fetching.current = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /* ---------------------- SEARCH --------------------- */\r\n\r\n    const handleSearch = (search) => {\r\n        console.log(search);\r\n    };\r\n\r\n    //\r\n    return (\r\n        <div className=\"NewFeed\">\r\n            <div className=\"NewFeed_contain bg-fb\">\r\n                <div className=\"NewFeed_search\">\r\n                    <NewFeedSearch handleSearch={handleSearch} />\r\n                </div>\r\n\r\n                <div className=\"NewFeed_row\">\r\n                    <div className=\"NewFeed_col-left\"></div>\r\n\r\n                    <div className=\"NewFeed_col-center\">\r\n                        <div>\r\n                            <Posts posts={has_fetched ? post_arr : [{}]} />\r\n                        </div>\r\n\r\n                        <div className=\"width-fit-content margin-auto\">\r\n                            <FetchingDiv open_fetching={is_fetching} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"NewFeed_col-right\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* add new post */}\r\n            {/* <AddNewPost createNewPost={createNewPost} /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nNewFeed.propTypes = {};\r\n\r\nexport default NewFeed;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// \r\nimport SearchAnimateDiv from '../../../component/some_div/search_animate_div/SearchAnimateDiv';\r\n// \r\n\r\n\r\n// \r\nNewFeedSearch.propTypes = {\r\n    handleSearch: PropTypes.func,\r\n};\r\n\r\n// \r\nfunction NewFeedSearch(props) {\r\n    const {handleSearch} = props;\r\n    // \r\n    const [value, setValue] = useState('')\r\n\r\n    // \r\n    function handleChange(new_value) {\r\n        setValue(new_value)\r\n    }\r\n    // \r\n    function onSearch() {\r\n        handleSearch(value)\r\n    }\r\n\r\n\r\n    // \r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <SearchAnimateDiv\r\n                        value={value}\r\n                        placeholder=\"Search...\"\r\n                        handleChange={handleChange}\r\n                        handleSearch={onSearch}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewFeedSearch;"],"sourceRoot":""}